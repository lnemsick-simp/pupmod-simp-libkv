---
  # The backend configurations here will be inserted into libkv::options
  # below via the alias function.
  libkv::backend::file:
    type: file
    id: file

    # plugin-specific configuration
    root_path: "/var/simp/libkv/file"
    lock_timeout_seconds: 30

  libkv::backend::alt_file:
    type: file
    id: alt_file
    root_path: "/some/other/path"

  libkv::options:
    # global options
    environment: "myenv"
    softfail: false

    # Hash of backend configuration to be used to lookup the appropriate
    # backend to use in libkv functions.
    #
    #  * More than one backend configuration name can use the same backend
    #    configuration.  But each distinct backend configuration must have
    #    a unique (id,type) pair.
    #  * Individual resources can override the default by specifying
    #    a `backend` key in its backend options hash.
    backends:
      # mymodule::myclass Class resource
      "default.Class[Mymodule::Myclass]":       "%{alias('libkv::backend::file')}"

      # specific instance of mymodule::mydefine defined type
      "default.Mymodule::Mydefine[myinstance]": "%{alias('libkv::backend::alt_file')}"

      # all mymodule::mydefine instances not matching a specific instance default
      "default.Mymodule::Mydefine":             "%{alias('libkv::backend::file')}"

# Missing default
#      # all other resources
#      "default":                                "%{alias('libkv::backend::file')}"

